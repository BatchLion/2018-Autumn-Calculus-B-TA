(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    302909,       5786]
NotebookOptionsPosition[    301035,       5719]
NotebookOutlinePosition[    301391,       5735]
CellTagsIndexPosition[    301348,       5732]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "16", "]"}], "*", 
        RowBox[{"Cos", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "9", "]"}], "*", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "9", "]"}], "*", 
        RowBox[{"Cos", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "16", "]"}], "*", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.759222832638249*^9, 3.759222951583206*^9}, 
   3.7592230063909717`*^9, {3.7592236377662706`*^9, 3.7592236455604763`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]],
     LineBox[CompressedData["
1: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
/wDUIHZY
     "]]}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]],
     LineBox[CompressedData["
1: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
CEtBxa2RNVn/D2HNKvc=
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Arrowheads[0.04],
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-3.9999995325406914`, 4.}, {-3.999999437124819, 
   3.999999513097954}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.759222911815663*^9, 3.7592229531202602`*^9}, 
   3.7592230244134*^9, 3.7592236464899044`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"9", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "16"}]}], ")"}]}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"9", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "/", "16"}]}], ")"}]}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"9", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "/", "16"}]}], ")"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "12"}], "/", "5"}], ",", 
       RowBox[{"12", "/", "5"}]}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"9", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "16"}]}], ")"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "12"}], "/", "5"}], ",", 
       RowBox[{"12", "/", "5"}]}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"16", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"16", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}]}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E4", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"16", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{
        RowBox[{"-", "12"}], "/", "5"}]}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"16", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{
        RowBox[{"-", "12"}], "/", "5"}]}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E6", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"16", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"12", "/", "5"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E7", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"16", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "9"}]}], ")"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"12", "/", "5"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", "0"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "E0", ",", "E1", ",", "E2", ",", "E3", ",", "E4", ",", "E5", ",", "E6", ",",
    "E7", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7592235035508227`*^9, 3.759223585726203*^9}, {
  3.759223618012418*^9, 3.7592236296772428`*^9}, {3.7592236616822996`*^9, 
  3.7592236907759385`*^9}, {3.7592237234004*^9, 3.7592237866265197`*^9}, {
  3.75922382407751*^9, 3.7592239317713437`*^9}, {3.759224062130701*^9, 
  3.759224100871144*^9}, {3.759224139954235*^9, 3.7592241416152134`*^9}, {
  3.7592242360016756`*^9, 3.7592242980775733`*^9}, {3.7592247469251623`*^9, 
  3.7592250069729705`*^9}, {3.7592250415716953`*^9, 3.7592250435694656`*^9}, {
  3.759225103606591*^9, 3.7592251747786646`*^9}, {3.7592252129122143`*^9, 
  3.7592252187871037`*^9}, {3.7592252490250697`*^9, 3.7592253178152995`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJw12Hc4V+//B3CEU7zf76OMloQkUYhPlNF9VxqKhvQhI6OpkpFIWcUntGTv
EcmMIn2s3MfeyR5l7733+t6f6/r9/jrX4zrnOue6z7ler+frPkLGZhq3WJiY
mIyZmZj+O0oCvqH1dZK6F6MGlfjUgOa9fW6LSyQ146vh+rQ3Ezz1PSI6PUtS
DVJU3cSGfBBBqRaMTJDUlJVP0CbVYlA8rGPcN0xSPJ1K8nu6ysAY3wOmjj6S
IiY/L6rQfwKeE/ZhzZ0ktcG2lUfw8S9gGBDeUtFIUtZujY9urdeAl/lfnhTV
kJTh8T0vQ/fWgcSxXD6qkqTmdEPpBYr1YEGlRyM1n6SueevfQbAReE6KlQcm
4/sPdRy8U98C0vkVTLzjSWqHO1jIiPkN2s6cJ95Gk5S6T25ey6M/QDzM9KRT
MEm5zpqm2y23grxzKVm3XUkqiWXmt7lJB5iJUkyUNSCpMQmfqDujXWBHldq5
gzoktWojxl4o3w3gkv6A6FWSGiwygMtO3eDtJSeRHedJSuEg+keEqweIrhaE
MMmTFB+zrHyIcC/Q+vvC20oGSR03nP0du7sfODw3kCjeRFLc4Rp9W/T6wcdE
81KKlaQe52WFNvn3gwkWb7ZvSwyK3lQi/oo+ANySG+2D+hjUnet8jPXJAZC5
0ejhnRwGlSQtUnEjcghUtv/dNJPOoCQ3PN6Q1TIEOr6rnXiRyqASnxwS8N4y
DNhvHeELjWVQVxMOcdU4DQONXDKnxotBBcVHjjdpjYBh2xz6sTsMavs9I+79
U6OAf3jnZx4uBlXukLhkZzkBpPI2b43kYFB6bV0ytW4T4EQg8VyKjUEN2EBj
InwC3D0zrXluiU6tZkblcpZPgLSoshXHHjq10VLGyUtoElzQs1UbTqdTMS6v
y1dLJoFjZcNwrhGdYtZ7/2JuwzToaHKmEvTolHjizcFg3mlwokfa11eLTlmf
OsgquW8asC+/OmaiTqd4Fi+KbT83Dd6IAU+uo3TqcXFSOpfHNAhyjpEz4KJT
YTGn3ZN4Z8C3o0+er+TQqISr9YWlfLNgMHr7Vnl+GpXzumQ1d3wO/DTuslbY
SqNs+G4v263OgW+7ExqUt9AoxWx2/YOc88AhUMlPZSONOlz8yv+h6DzY8taA
V2OGkzqn4jxspTcPFKyiuU0rOCmNLOV7EUXz4NWJQ1xRdpxU+KOrpt3eC0C8
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
Df7vfzD8///B/wPdu8QD
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
eWxHECjjS3gK3h2DA4vYoqLBCzmGj0Fj+tyPZWz1Ak4jvRuWMCVTJ7j63/nf
VtDL8gzhV8LD+v98MnoVvZdSI5/cV178z65R13vTZ2+SXi+3vfjPW5OPM9Ws
bMjuYaFnK9iPOMzrLv7lTLq6kkNL2D2pCtEeMv+Q0XJO3xewL5iyWH6XfE5G
VbbMz/73fTylh8Z3epIbJPTfTmH7t6k/8+bxJj8sz6SOYZd/lTbf89qXNCI+
7RvCZnvNq13IHUAqj7tv6cU+cG1OydgjiHQzcLz7B/ueSovIAmco+bntzd5f
2O95c9f6uoaTlziRTi323Qc1swJPIkm189zD5djvNNJbP65EkYPCU7pZ2GS6
ZLWD6jtSwPKNTCp2846wglP2MaSp/XHLeGyexSdJXfOx5Naupf2+2InXpyI+
HYgntdMW092xj1df93G0TSApqfWx9tgO8acfbZpOIiNt7fNNsTfxZ5t3yyeT
Mnd+Tmpjf3GWNflslUImHFZ8fRx7OpFLTHzuI2mifZBdAlvKZZQLPUglnQVH
pzpxvRgo8679IPqF7HmV1FWJ/XJSgSO48gsZt7ppZyb2yBXH1fu7v5JrM2YD
PLE/q9GndrWkk2GbAo7JYncuyY7zPf9G3nUNyBDA5kvTHmFVzCDX8ys6L+H6
f7AztO/Xm0ySM+jUcgH2AU6pFk+1bNL6lXP2OWyz7DPN9uPZJMugYvo+7GAb
qwazcCCHKh6xbcB2nPzdJ2KPyJD9ge4/cT9quyLWuViXQxpl/NE7hh2lltqQ
4pFPht1d5WPgfpchfOxv8fZ8cssAIdC1gOeXpfraUIUC0lfH7MY3bPa0hSqP
zgLS5LzEogn2tZ1Hyq+oFpHNt/f0JOB+K8FZhTaOl5CuycWFW3F/pjpMydcn
Ssmvum5lPbMEupQ99Z09vJTUlTcU/oT93GZT5vipMvLDpHLGUeyhHqO0snfl
ZHoIlWyM8yClaCTeSbeSDOej+dhN4Ty6THeQia8kA5w+dahiM2akzrXNV5JL
IW2BrNgK3n89jtD8Sa7m5B1wm8TzArIUWR35SRaLSB5/MUGg89uGzLP3VZMt
75V9bHB+9d18rCOgV03Ka8qr78N2/sJ1+O7TalL432vXBkcJ9PH0bj6hmmqS
P/vaT0NsxqPrGQ7WNaSJgYqFMs7D0vp2TtV/a8kNfLerm3C+mopajPm21ZJ/
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
ngdT//88+H+JOXUS
       "]]}}, {}}, {GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
          "]]]}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]}}}], {}}, {GraphicsComplexBox[CompressedData["
1:eJxFWHc81t37xwefhPRIHmUURZSy9zi3UU9DVoM0aBhPlNmSliIzI1mRyH4i
e3OOlb3u3MiNrOghskfW73i9vs/rd//zeb1f55zrep9zva/rXOcWvmZvbMnE
wMDAw8jAsPnlv8ApJidHoN5H4aqbX3UWkkvTiQkphJSzP4wiEN/x0VnOWEZk
9TijJJBkRtN1d5KKehnQnl+KkUaWzCjLuFpZXYgBhfkf3pJTzIwuDy/4skSv
w7yIlXTPHSzIIBbq6O1agxM6CZVKFiyoyPfcrMCdFXhHHIzT0ljQ7PNbV8K6
lqGGlLtJ9hwLEv09YNVgsgSLUh6IKMqyopbofdbeeQtQh57py+3AipxgOTOj
zDzs/fzg680EVjQ0OXBZJHsWykbX07JorKjpVEt6E88MnHLd6M5mIVGG2K5o
2eApuE83m9P1CIl4r1iw6vRNwOKTV69dP08iG5/gEy5JY3B39VCf4QMSpWU9
quFLHoW91IId4qEkGlQgFNqsh+Fdix3ddpkkYsvV6l29MgCFu654ideQSFtI
Yez+wR4Yktomk91NolS2X2RMLg1qRmlJ9/1LosmvCoom5i1we/0xb5c5Ep3k
WNyNDCrgdjOWsj9WSVRc6JDaeS8ZvvX/VhqwQaIJojBxl1kS6G7hRREYf9AN
2MhqrgDJ0vxu3Sskcjf1S+X+txlYpd9mbsD2DBgCTwURHYBny6WvGtifaHTb
mRnnHnDe+/ba5FcSsccaOuepDgB117ccvLUkes0n1GTuNgyWh3SkmzJIJBEi
+/ON5yhIq2DPPRdGon1z2iH3n40BVvhw9IsriSSXC/T+Kp0A03vFHPpMSCTM
qGbZZjEF4sV6B2zkSCRvqid5h5gBudelT0STJNKXYTxv7jML/oqiiMV0s6LI
VbmqGLZ5AHgHOENSWdHtyAjV8ykLYLrn75kZR1Z0vChux5nDS+D+kwDtEmVW
lPqxb666bRnM83Hvbp9nQZpB4bsDbq+AvNKFNwyfWNDXxfm4d79WgXP8PZ5D
NixoVdpTbn/QOtB9IHBqdicL2rFwacd9dgbK4yeuToOVzAg1Kkh51zNQHtA4
+ZVvY71yiBvQIhgp9pGqEyLszCiJ0+697kUmysiJ3OdhyQT6Xz5Q/ssHSSmf
yAIqExpSErRLsCHQ3TsibNZDgzD+pcdoSQmJDupeMlZx+Qada0GkUxuJFnZw
L7NPdUFNfcVXNYMkMlx5YZSQRYWmE708Yb9IJOAcmuzbWQtHvQu9K5dIVKj6
miXvVgGk/U27QlknUf+lh2r9dCNoW8AxvYHj/85D42+VhAKQo7XtujIeD27m
pA3Sa0E5WcNYjtcf57U15CyhAlkXMy9PbL+oOaOlXO0rYIsRiefB/t/Zq0R/
cvkG2kaRqiPm13JJaa8vfRDApN5985j/1Wz1IbUaJspwxUbpyG0C7a861T/P
RKBSubOFe/UJ9JHGvScqYQhmk3LuMvkkChhXqvTz64ce1/VptxvxfiI+OGr7
d0P1yn/EevtI9IipSFJEvh1qjXzb1fGTRB5iVvaO/I1QsWL8YMkCiRJTkOBb
zzKoQB1c1l0jUVyI3sc81gh4oV4qfhDvt544LbRPIgvUZV6M2YJxpLf+2Ela
NZjuuHni798k0o3tMj7F1wZ48oDWiRkSvbB+758S0wmspZnLar+T6Jqnx5Lh
XC8wbTxU1EDD+bReWbeXfRAUZGZeTazA8y3atShBTBT7zjWTdV8CKWYeF7rQ
0gtNn0gzyneQqPXV06c0407ImZT20mmERPvnDO6Ky7RBwkZKXhj7y4afBxJe
V8NwtJHrg/k0NFhOtJ7NgiF7C2YJzJdVojdetSEUtCepJoxi7EQeyTEQhiCS
p5JZAu/XZ0cTdB1sAL0HKiIG8Hno+a6dbjFvB5482pXu+Lw0WRNeKK0xUYR+
vXDVNyLQ+1eSz3n4CST3R+2RfAqBaljYU/NYh6HuNNeF8zl4fat6a9V8P+y3
9GdqryPRp4s/03ov0mE55/Se1h4S8Xiejeyfa4eq+/YxXx0nkSpDs/GN0iZ4
6pX/9ffzJHqVMd7uWYegk42+SRauR6zup55GPIqDEtcMhyHmjzxSpqU60sBT
wy7uCxgLjU7OrRtVgVG/wipxXI8qrLjO3jzWCuI11CjBsyQakwu3i27rAKaG
SMJ3lERVQYcSheV7wQTvI63hThKtGvi8G48bAM/OJ1lZVeN6rLTXUfsuE8Ux
/Eu4WSSBMlyNleti+2C9469Q+hcSXTeqK3EQ7oI/xGgL8cNY3/fGhkam22Al
T8/64BSu3xFHqsMVaqDWirrop2Vcj5+7PdC5mgt7zoyJpOB8UXYWjXVL8wCj
RmqPf2P+Xp9zX+kOFQP/iLjwAhyPbY636o+Y14Nh/1DZrkWsP0N5g0n/L0Dl
dVstxyTWQ89UtsogE4VzcFvHQQsCteqt+z5+UA+p56MGavB86ZmUIHHXYigY
W5FYh+05nGTOcNnvA4NW8tcWsb8c3WqdI9a5IOM4k2Uy5sMrmf4t1LQGcGp8
3xKF+SaLv6soCUyHj2R62wzxfOXG125081jgLT5uWYPxkf1f7NKkyoGswtlE
bxyfj1IXzinwERSjHm0LI20C9c1Gte87QKAIi8seSyoEahd8+UtHaRjG1b2/
MZSF7yNt2GFxcAB+Ly4xe4rr/1LJdr1DlXT4o3l7YiWdRN9qhNvAORq88Ode
49gxrJeJZ1WXXzXDQfmf9zmwPuyuTN/74FcOKbZBddex/37BK28KXBPgqZTJ
RymYX4euTOP+8FTQ+l7x2kOM+3eC36aBlSDauN30OdYH8fpcymxRC1C755Ei
je8rgd08l8JudoDYbvp9qx8kcglbX2Vr7wFB3smm4104P+9PbGm7PQCyWMWP
os8kuiLy2avShokS8KJkzi2WQLfMTY4ysn+D3rsVDqVQ8XlkTZiVeXVBD9FC
jYIhXG8K83cfM6bCRfs3SBPrQ9tzUDGYtRbeEpsyVcPnvd73ErqN5sHjUWee
3MXxiCLzIhicnMF0u83wOua/I3F5RVO3CHDfXLj7G8ezNaa0xSu6DqDoE2f0
cb31zm5pWdv/BewdFc1swPrgqw1tKGpnokgPdn7xsyZQqkrW2r2TDfC9qdIW
XayP8dO5nVcZSiGP1u9t3tjexKUD7vc5XsN11pK1SewP7GfLFK/NBoUFOx92
Yz5dZuvDU6GfgYPT8FVmXF+2O5glhTVnQMZmXmFJPL/YgqnlfnUUsIwyl/2K
8dyOOx8OWiAw+XRKn47jM797wy5vK0GxvIGP9QSBTBodO+YYYmD5rm3TVDz/
3FCgr6BPBhicG2uTxdjzgKPcVno2jEr4dKIL+zeaznddbQ0E0MS9bAaPc+Q5
50+Zu0Gq3YH4NYxlHV8qnnzxDxQ4wc/qhDG3TWLQ70vxQLSLBrIwvqGbrZEj
SlDys3KdP6sSyE3s3KNDhwnEJReaE6pIILrE0WAfg2Ho7CIeLI712f2QoTtd
dwBafxpbaMf9VPSECD91gQ6lg4+Oq2F9Vtl42dl70ODwUxkpCtbns6GLj7oX
mqFsaRljOdbTRQWXOpnJcnj0wUs5Nbz/ZtvRPceXE+GUrSBbNOZzbf8dlT3L
ycD42TkuX4y1D4+uekhVgsTeANNPm/VrfkqCMG4BqpRy08fYniIn9QyPUgcQ
T/uRSMX61NttI77+oQfEiBpF3ML9VC3HnrLKswMg+lzBP7aYLxNfBA/zNSZK
g76BAnsCgRrbvp6KBt/gnhFb621Yn0ZDGxKWJV1QhqXxBgXr86aZUN4ddyqc
0bIzHcf39Se3kl/b7GuhaU3u9AbWV4+f/7WI1Hy4OJjVdxHHo9YifecfC5fB
kfFx2mY/0PXmrWyJSyFw7v9rfBcel8m3pOaq1wHp0QY+L7z+xw3BQI8pKjgs
1vdOAtsvKf3bZKWJiaKx2Fivaov7eWm/vLmsBrgezh3JgPVZu1Lk+riyFOZp
7HaxxvqsXVIJC2MLhYzq4ur/Yn/MPP+MJixlgas/HdhnsD8Vp8RRQcXP4PL6
Fx0lrM9JQYuTOUGZMDZg5QHfZv5X/Sq8UBsBpr5vdPRjnPan3yPqFAR7AqWT
mbD9yO3UpQWCoFx713Q8+DSBdslXzLNtvIfbFIdodXi+QqLlC4U7n4B0YojD
sU090e52iL3Lgdc6v4uWY/8TqScbipJ8gaJ9INtmfS3m/uahePAFNOEVVl/Z
7J8bg92eb02DAuf96FcxFt0tSNr2xQFZ4Z2apRhvUfWsmxMiKG9Hpmf8NAk0
29K+VWL1Awx8fVYgd/P+vscw6Wb1BNy69FxgU+/c5Ty3LnAFwtfV4z9mMQ5d
5RkOq4gBF9dN81sxdpM2L6cRUdCIkapAx1jSvz6Av/k1cA7fHj2Bcdwxiesu
tg7wKWhQ2Iwf0u/PdJYkKL7D5wbWcD40gkwjKWkCVSo1Sn6Xx/VcKn4o7eIw
/NxBpdbj94YTXyydZjQAp6zW+h9jvU2xfHRP2N4DU6uupi/i94ZSoZrqy2ga
pFqonuLC+VHQV/uV71ALPP3x4/dIrGfqe4WZJaEKeDg/N0QM50cVt+T3gIIk
+EFM73Eo5iPO86dDlEQy2Feq9TIY4xlltccCGxXAVIfOUo3zQyRJc8xHsAWI
iLG1xGN7FayZLcaC+H7PDTHfgt8bBXQBzSVfnB+Xp6zScX6MdeTzlf41AIYl
+1YR5tse7G4Wf4WJYseSH9mWSKCVrfwG4xe+QYEHRBzC/Wj8ileQckcXtJFU
2sWM86M3te25fyQVFutxG5dj/Y7ck9A7/aEWLl9q7R3A+q6/vj3nAEcBrJ34
R1Uf66GVtMq5Kq8MVCKPr2+eb7H/z6bfHIWArlhyTAKPD1YUntHjqAP05a/J
8Xh9uIauw4kOKhDm3Cdviu2/Uj4T/baeiWJ4sZH5j1sE0j+0zC032gDNlmPc
+3B/lk/VaOQQLYNhGf8an8f6zT1WKXzAKwx6xS1tHcH+RtlX3YcDs0CE1JzL
GvY39ui3TQ7LZ3Dm4MFrhjg/euYG32rPZkIbRmi8Dc+fvWslVX8iHIyN/2s6
jHEgVy/fH94QyCtxLezE9u18izXDGAhKhovKBwcDAm2nsxYbleFHdPfIYhWe
//sNWZyVkA7KeHUGDDA+83H5QO5GDgy7o0/Jxf65uZTz3qZ6gU5KVt/Spl7T
pyPPHXgJLUcK8pc3+2vX8D3vm9KgyGi402Y/d8S5S2vfnjjgq9ZkV4Fxd449
1xt+glJ0psrWHvebY3d3tToUx8Mvc5PWn/C4EaBXato9ALestfk370sGrneL
P/yDILf53lfTGCen+17YovsORIumcNEwvvn4xylL92iY1qd+pBNjTaDF4mcQ
DETn3xyfwtjksb5/luVd6Pah+uWmveC6usUdEgRlqX3NblCZQM0xwt9e/LoJ
NFIX7m3Gtzs1g2OLbwg89LFM6SfGtccu93+NfwXKWmnrc5v1526jw5+Hn8GA
N1M+qxhf6eT2u5zhDo6lHfqxWR9OjvBWvxb2h8dPCm1b2LQnuMXJbvAGvH1U
OX3T/uSXBdsvUgQlOCS0lU/h/9+DDP/7/fd/yX/4/wBaqPEv
     "], {{
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl0ne4zXUAx/Fzb8Z17WuEZJMt2UqIylbXJuRK9r2ZJRUNGQ3ZW6jsVXZ2
dvbWsDJCoUJI1Ov73D9e5/37fc9znnPO8/nlT0iKT4yORCJRZPXyhGaJSr4O
Zz8wh7dpwzOUI3zmIVKQklSkJoY0xJKWdKQnAxnJRGbiwvfwI3N5h5eoRfnw
W/iJeQyiLbWpwCVW8jHdeJFs/Mx8BtOOZ6nIZVbxCd2JJzsnWcC7tOc5KnGF
1XxKD5rwMKdYyHu8zPP8xSbG05fK/MYaRtKTpuTgNIt4nw7U4QabmUA/qvA7
3/IZidxnNzNpxm22MYUBkeTx9smX5OQMi/kgbOS9g5rAPXbxedjK+VGty02+
C1s5mxj21MNhK+2v/7E3bOj+i7CvHg87alW9ytqwt/tR4ZnQQ2FvTdIH7AnP
gftZGqPHtDl32M5UUjk/om+Gv+R6v35FLs6yhCF05F++Zwb1uMUWJvE6T3KN
dYzmNVpwlx1MYyCP8AtL+ZBXqM/fbGUyb/AU11nPGHrRktyc42uG0okGVOMP
NjCW3rTiUc7zDcN4lYY8TR4usIzhdKYR1cnLRZYzgi40pgb5yE8BClKIwhTh
MYpSjOKUoCSlKE0ZHqcsv7KCj+jKC9TkTzYyjj605h92Mp23iLbXAZ1NrOsT
Gqf/A+wVgjI=
          "]]]}, {}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]}}}], {}}, {{{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
toTHM+d1sGquAPzf+2D4/++D/wcTQbTQ
       "]]}, 
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
asP+rKmHlYMjhH4TiVYhlKEXVAetsl7+bs0kYv0W1bv5aS2My96LiGkn0eL7
1mFH81qwfOIpLtZBooXngpPfNGvh9pH3n19izxr5Lnrw1IKjY6hoxHcSjY85
CI551oDJbv9kt04SAfnR32xFNQy9hTqpXrx/GhSiRCqqYEtorGEEdnZ4Skqd
RxWY62qwcffh/SMRXriLowokQgVtBrAjKbvpxWWVEKjrIxk0QKL7t3df8J0t
B7mA7fmFwyTaXZ0pmtZdDKyNK5fMJkjUzVEgkxNfDML+tgc/Yvuo1Cp9vlEM
l5gq7zgmcTxr5HTFWBHUneRViML2idjsMTBfCCnetFn+Lxy/ETIpwl8AD4bi
ljp/43hM/JJEUz4M9KMT/03j32vP5JYNyweXYwHlBtg+WrWblUXy4eRdi3Md
2HsUl+uel86DuISgT5UzJBLinH0k9uQzhHXeeOs2h/ffff6X28nPYGO6njsX
u3RM7gMV+AloofLg4X/xxhtjui8/wm1KRkXjD47HtJ59lvseeuZsuznn8fMU
nLWIpt6DSap98S7sOx78XmlFubDlfkiL4b+4hTqqqH0HGrnbgt5hW+2HLYyh
bLhpKKJ7YYFE5W9bVfjMs0GWR6PkIfZG8dmLotNZ0Nb0+kr8vzjX9qfKy7Lg
+noBhbF/8eboOet1GeCshYRt/uL7nQA+1xfp0HWknj8Yuxxat/lvToeE2zL7
sv/F4/kNX8u/BZ13xcKT2M/6uQMrA1/Dh7OfFPQXSfRjtU1HRnwqWJ1Yu+se
ttSRTomwnFdw4WeTxVPs/Nis91ebk+G6tGsgYPN83ciuPpQEBRLWDxqwL7B5
qCvMJ0Kma3XkEPaEgd6PpQ0JkGBX7L1qiUT7npZK9m2Lh23zxrri2I+R/J2K
/XGg/crKUBFbZCPBDNWPAceang3nsW9qWGg6WkTDzZyjNdexcx60hhg7v4T8
bJFPNtjP310+e+VoFDxS3X4wAHuH4I4hOZPncKzZtC0Ku8Ka48Ffz3AQchV+
k4Jt9LWNLE8NhVWb1D5kY/+RfxsdVB0MJY/GWPKw/Z+67TSaCARTU/JhObbk
+PlSWb5nAM7Ju+uxkYaM7sIOf+C9nbe1Fftc6rLR0jN+cKhQ50wXdofga1ap
CS8oIYw/DGCvaDgjUbjjCbxImzw/+m/+/ksnLtm6gb7E4vZf2CaaiZbTH5xA
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
Ho9nxmdX5Uw+/N/7YPr/3wf/D76wZd8=
       "]]}}, {}}, {GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 110, 111, 50, 109, 94, 107, 81, 92, 105, 70, 79, 90, 
          103, 61, 68, 77, 88, 101, 54, 58, 65, 74, 85, 98, 49, 48, 47, 46, 
          45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
          28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
          11, 10, 9, 8, 7, 6, 5, 4, 53, 57, 64, 73, 84, 97, 3, 60, 67, 76, 87,
           100, 52, 56, 63, 72, 83, 96, 2, 59, 66, 75, 86, 99, 51, 69, 78, 89,
           102, 55, 80, 91, 104, 62, 93, 106, 71, 108, 82, 
          95}}]]}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1, 95, 82, 108, 71, 106, 93, 62, 104, 91, 80, 55, 102, 89, 
         78, 69, 51, 99, 86, 75, 66, 59, 2, 96, 83, 72, 63, 56, 52, 100, 87, 
         76, 67, 60, 3, 97, 84, 73, 64, 57, 53, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 98, 85, 74, 65, 58, 54, 101, 88, 77, 68, 61, 103, 90, 79,
          70, 105, 92, 81, 107, 94, 109, 50}]}}}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
CdVsqk/HNpYNgrX+37+0/61//rd/4v8CmXl2Uw==
     "], {{
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{50, 110, 111, 1, 95, 82, 108, 71, 106, 93, 62, 104, 91, 
          80, 55, 102, 89, 78, 69, 51, 99, 86, 75, 66, 59, 2, 96, 83, 72, 63, 
          56, 52, 100, 87, 76, 67, 60, 3, 97, 84, 73, 64, 57, 53, 4, 5, 6, 7, 
          8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
          25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
          42, 43, 44, 45, 46, 47, 48, 49, 98, 85, 74, 65, 58, 54, 101, 88, 77,
           68, 61, 103, 90, 79, 70, 105, 92, 81, 107, 94, 
          109}}]]}, {}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1, 95, 82, 108, 71, 106, 93, 62, 104, 91, 80, 55, 102, 89, 
         78, 69, 51, 99, 86, 75, 66, 59, 2, 96, 83, 72, 63, 56, 52, 100, 87, 
         76, 67, 60, 3, 97, 84, 73, 64, 57, 53, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 98, 85, 74, 65, 58, 54, 101, 88, 77, 68, 61, 103, 90, 79,
          70, 105, 92, 81, 107, 94, 109, 50}]}}}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJw1lQs01dkXx6/7Oiql1T+lXCLTvzuK8kgeNXtP3UGGxnjUlKhINf9Cmojy
KMQ/j+mq/JumJjTFEvI2Ei65uZc/uXmkPC9p8ooruV4X/19r/Ttr7bXXWWuf
s/fnnO8+R8fD19GLTqPRfCn77ANGWk2MjRmYZGm99bP/WFzc+uP3DBTlzd1k
KzPwVg6n/bwXA1V3miXEvKbjIekjXm8IA+VhAoe4DDryRi+taExk4MuaHbov
QunosqkNa7KpfWLZsTH2dIxKcmthihmo2HZubYcWHaV4rNa6l4EJL4LVLgwp
oVtlnu5yBQOXWQX9ZVyshDNBm95yVjLxpKbJ73eilbDi8EaGoQETTVXuDqg4
KmFqiP3Vq1ZMTN9wxNl0nRJmX3j6ywl3Jg5e7Ne6NkzDngeZ5XaBTOS9VnZL
K6ChMRH7BvCZ6Hkt2TYhjIaP/3P8ctojJv6t0hk4w6OhHct+0k3IxIuey1tc
F9NwcaZb008dTNxTJRc5PVyAsbAxVVc5E/+r9kCxWW8BpmKz81KWsTBpUWXZ
aME8cJ/LCke5LNSu8X9rbTwPFzuDNKt2sZDuEBpikjsHI/r6Q20HWRjw9Kb4
m21zEJPhuWbmHAvtzY83vM5QgNVRYZZbPAsLdYVxt7gK2CA/nWr1kIV9Zlvq
px7Mgn7xbwumAhYeb7xVkbtiFlzyRspPtbLwgvC9RVHUDKS+EXWljbFw18Vg
w0+D07BW2u/x8xI2Zo/q/ZFuPw2PtUzsfXXZqD0qUX9WNAWnYui/Be9kY44i
q1p/2RTYGMzavHBhY9cZnfCGU5Ngk2vp/tCbjYrI4FfxIjn4HV1oiohmo/+K
e+kaqnIo2fMhOzWJjUruA3bJhyZg82H3YckTNtpa3PXwvvEJyjOnf4VGNjpv
ZZ8PbhiHX950JBoPstF143nrd+xx+NF495wBkyCNZzf27/Uf4YfnTbU+HIJD
Mg3d2m/HwD/y/VShKcHJkPUrT4MMBOt3x4Y7ELwdnzVdfngEvp4WR9w4SVCq
N5a++ptheKp42ZERTlDAO3u7tHgAfMxYd5XvELTl92dpcN4Dz+mSYDCPoCFn
Q/pe0z7YfSd0d3MdwYj542k/BEvBQyNNn/6OoL/RVZrNVCuU8VznFxYIJj26
UrkvezsUONlE7QIG1sucXmVrMpB3Puxyt4DgPwPyn0z59YJj+3WzodcEU1ZU
i9WaO2D5VqVVlz8S/P2dyMJrQgJqOvxOC3MGRj80NwvgUuvfhWl7PSGYaVug
6n3gLdg+VS7vbiT4tsc/3H2qC55saE6pHCJo7vLc58+qZuAtCus9UE1wnhuu
sje0Bw7OcvLlXQTrVMZ1lkS0wXELgxicJmh32yTw4JwIqonJou2mDHTcECpt
0afycWiyjUUEiUti5pqat2CVUUVrayC4M+ZUO1/RDb8ml70/2k/QSrzUt/L0
K+DhQi6nimBsUPl98XQP7BtqnZC1E0zNNHJqzW0Hy8LVEukEwXhJ8d34I/XQ
92jQVWeUIISMtHMnGuG6gMdLVhDcoeUdZDRZAVqzrHWFJgzsu+fYFLmVgcLt
FfuvFhCM66y8TqP1AU9XZ/3+FwQTixNsxTulMOWWtzjvb4LH2kLOvtrWCkJX
wZrQSoIDHJn0O9NecPbcttqnjWDOKlqRL68DUs+qjG/9RDBfXjrDL2mAvSe7
Q/0+UOeRLynP7mkCRbD5CdkMQW2nPdWj1UKQTK7P4k8S3HJiT7TwZS1w6Q46
DvMEO7UO6abN/wW1n0a+/kS9g7mzkSs7DBkY+V3ykpJ8il/N7F8WGlS93Q15
ifUE1d0GXPTcpJBVupnTRumH6lvem1utEPlzUv3jCoISlljTzLkXnNb1pWW+
IfgyzHrHvbgOcH0ZxTwwTrCltFb0+JQEmKID/NvDBFffn7n2zqkZctvzA9Wp
eiP0WzL6z1RD1L4/yovlBMVqXIMU7TroPFJrFDhHkNk12/neowystQQu4lmC
zr0l8ozJZ3D2zxZVLqVf7+aFI7mTOZDs55l9g+KpTflHWrQRA4/Z8b0cKZ4q
0S7jGi7Fs3PjrAnFk/jTjkvC01JQHh74yofiiTXXkH0rboVjZ65ttKZ4HKyr
+FqelN5DLGXfUzzKX03GnsnpgCIab+kHSu+aR849UM+VgLt81W19iueN8OP4
8rhmUFnidzmT0qf/6z3OfhYikF45KLKjeLaMOxe7PKsDM360pQrFMy0diL1S
JoD79sHuhygehbeDXmJfFdQ3Xlcvpe7H11HCqxMVQLjhUr2+z/H7rZYlNJWA
+jl1cpPiXRtutUljIQ2+/Ge0/48v/fxl/j9cCTMp
     "], {{{}, 
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 110, 111, 50, 109, 94, 107, 81, 108, 92, 105, 70, 93,
           106, 79, 90, 103, 61, 80, 91, 104, 68, 77, 88, 101, 54, 69, 78, 89,
           102, 58, 65, 74, 85, 98, 49, 60, 67, 76, 87, 100, 53, 57, 64, 73, 
          84, 97, 48, 59, 66, 75, 86, 99, 52, 56, 63, 72, 83, 96, 47, 46, 45, 
          44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
          27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
          10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 55, 62, 71, 82, 
          95}}]]}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1, 95, 82, 71, 62, 55, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 96, 83, 72, 63, 56, 52, 99, 86, 75, 66, 59, 48, 97, 84, 73, 
         64, 57, 53, 100, 87, 76, 67, 60, 49, 98, 85, 74, 65, 58, 102, 89, 78,
          69, 54, 101, 88, 77, 68, 104, 91, 80, 61, 103, 90, 79, 106, 93, 70, 
         105, 92, 108, 81, 107, 94, 109, 50}]}}}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{
       {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{50, 110, 111, 1, 95, 82, 71, 62, 55, 51, 2, 3, 4, 5, 6, 
          7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
           25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
           42, 43, 44, 45, 46, 47, 96, 83, 72, 63, 56, 52, 99, 86, 75, 66, 59,
           48, 97, 84, 73, 64, 57, 53, 100, 87, 76, 67, 60, 49, 98, 85, 74, 
          65, 58, 102, 89, 78, 69, 54, 101, 88, 77, 68, 104, 91, 80, 61, 103, 
          90, 79, 106, 93, 70, 105, 92, 108, 81, 107, 94, 
          109}}]]}, {}, {}, {}}, {{}, {}, 
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{1, 95, 82, 71, 62, 55, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 96, 83, 72, 63, 56, 52, 99, 86, 75, 66, 59, 48, 97, 84, 73, 
         64, 57, 53, 100, 87, 76, 67, 60, 49, 98, 85, 74, 65, 58, 102, 89, 78,
          69, 54, 101, 88, 77, 68, 104, 91, 80, 61, 103, 90, 79, 106, 93, 70, 
         105, 92, 108, 81, 107, 94, 109, 50}]}}}], {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  AxesStyle->Arrowheads[0.04],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{
  3.759223757372509*^9, 3.759223787565942*^9, {3.759223834448638*^9, 
   3.75922385624174*^9}, 3.7592238883869743`*^9, {3.759223932916638*^9, 
   3.759223947865444*^9}, {3.7592240737026043`*^9, 3.7592241094319267`*^9}, 
   3.759224147374672*^9, 3.759224238968851*^9, 3.759224362088209*^9, 
   3.7592246473677797`*^9, {3.75922475208399*^9, 3.759224765799062*^9}, 
   3.759224796959422*^9, {3.759224829574368*^9, 3.7592248496055984`*^9}, {
   3.759224884129897*^9, 3.7592249033031063`*^9}, 3.7592249398551564`*^9, 
   3.7592251148394628`*^9, {3.7592252055867195`*^9, 3.7592252199054165`*^9}, {
   3.759225253182513*^9, 3.7592252798531127`*^9}, 3.7592253191969786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D1", "=", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"Cos", "[", "t", "]"}], "*", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "^", "3"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "^", "3"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "4"}], "+", "0.0001"}], ",", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{"Pi", "/", "4"}]}], "-", "0.0001"}]}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.04", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"D1", ",", "D2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7593958954909086`*^9, 3.7593959854185596`*^9}, {
   3.7593960236030793`*^9, 3.7593960352607374`*^9}, {3.759396067848204*^9, 
   3.759396204662575*^9}, {3.759396697067817*^9, 3.7593967153201237`*^9}, 
   3.7593967520165586`*^9, {3.7593967826761103`*^9, 3.7593969046141276`*^9}, {
   3.7593980161461906`*^9, 3.759398055748041*^9}, {3.759398148117925*^9, 
   3.7593981741488028`*^9}, {3.759398261613596*^9, 3.759398445670617*^9}, {
   3.759398479970134*^9, 3.759398481767026*^9}, {3.7593985127505875`*^9, 
   3.7593985291097174`*^9}, {3.7593988871252346`*^9, 3.759398894537399*^9}, {
   3.7593990196461525`*^9, 3.759399056633939*^9}, {3.75939909540932*^9, 
   3.7593990966408343`*^9}, {3.759399187426261*^9, 3.7593992933549433`*^9}, 
   3.759399346314169*^9, {3.759399412819541*^9, 3.7593994841208267`*^9}, {
   3.759399515873893*^9, 3.7593995263260317`*^9}, {3.759399933875181*^9, 
   3.759400004332223*^9}, {3.7594001477302322`*^9, 3.759400183633437*^9}, {
   3.7594008726517825`*^9, 3.759400875632495*^9}, {3.7595743005854483`*^9, 
   3.759574377920767*^9}, {3.7595746899614496`*^9, 3.7595747594451504`*^9}, {
   3.759574790396177*^9, 3.7595748171547613`*^9}, {3.759574902877568*^9, 
   3.759574922140972*^9}, {3.759912084763711*^9, 3.759912087715893*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
eOGw//9c/P8D+GL69g==
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwt1GtQlGUYxvGFdZE4rSzLYZfTvvvwSKUGIqgN2HsbHXCQLEoYBR1CWD7A
SBxGpUDB8kQNoQgmBBUnGZmsLFOr4b0JhWCBhhyIQ9nGhgQhcjRhWMm6+3DN
79v/4yUkpkcnW8tksqhH+9e80aiZ5WWGpADZ1R7zQ0sMSQHS9pj/vrrAkBQg
/tYhS/osQ1KAMKnG1nSHISnAYtmCD3YxJAU49EJdZH4FQ/JRv26pVrbpUf8/
BUgHwwbNHj2SOvhi5Rv7q08LmKg0/fIc84Wcd7uSn+jQ4YxbhTH6rDcU9hsz
is2+SHrC5zNhGZ/t8EFSC7db2eMPz3sh6QEa9eXYiAktkm4wfD3flBWnQdIV
vtTc1P3Y4I6kC6h+2vaNvYsbkirIkx/oDD+mRnIVTE26lzX2qtD0a8Da2EZH
mA5avDb3rDMOJ89ljB2zg/nXa1cPeSmRXAm6l2s6W1rskZRDyj09T6+1RVIG
TdZFEzlbFZir8BqYPbooBrXlGF70sMakotnOosA5MXX5k6o/YyxS38PwLT2f
jovVr01GB1bel05GX49szh4UVQ5haZaYKSl/hVwZJ5WK4bHNrSoXs/TmK3mZ
gwMD0vbUkKXe3HZpXd1MfsfHY9J0UqNj4Ks/iFVpV6wMdrOSw5aQjh3nzOLx
Ku3IBeOCFLL/8L4kzZSo3SStv+wgwxs77VckTt4Xhy8qrNcflCPbtdicUWMR
z6y1mK712CC3ZDkenrEC8jFs2LXcYY5RAOmISoVd3/ECWzhprUhtgVW4t+nm
vaAP7SHgt+GDmm5nrJSXlR9ZdIJuq8guMc8FTcbM9neUzkC64viQn1N5iwpI
NzSUlC107VYD6YF9PQlpNuOuQGrwmZgr/soKdyA90f1o+6mNARogvXFsNiX4
qREtkD54aWKv4ckSL4g9ELChdJsOR95zFZ/384HM1sKP9CoB1VkxCYE/+0Lh
02sCP/hLwLj8NerKr3VA6rHerj+0Nk8AkuHdq+0nSnbqgfTDic2e/ipfBiTH
ennE7VI9A5JjQnd2qWY1A5Jj775uubCOAcmxqajAFBDKgORY/Mfo+ahYBiTH
4OKvHE69z4DkOLn79xaHEgYkxwbu9FZxGQOSo/e3KWPnKhmQHG3uaFvrGxmQ
HPtDC47caGNAcjxjc2ljhJEByXF7z+BdYzcDkmOzITj+Vi8DkuPF06Obh80M
SI5J8eqp5FEGJEdf/60XxsYZkBzPflfuOj3NgOT40om2zux5BiRH2+i5tx88
YEBy/N5LCM1dYkDy/3+LAcnxH7YnUls=
       "]]}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  AxesStyle->Arrowheads[0.04],
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{
  3.759399097238256*^9, 3.759399188374631*^9, {3.759399219972869*^9, 
   3.7593992291786847`*^9}, {3.7593992594532104`*^9, 3.759399293952133*^9}, 
   3.759399347415177*^9, 3.75939941729076*^9, {3.759399456222439*^9, 
   3.759399484608555*^9}, {3.7593995197329874`*^9, 3.7593995276861815`*^9}, {
   3.7593999450901637`*^9, 3.7594000050524006`*^9}, {3.759400153912361*^9, 
   3.7594001842642164`*^9}, {3.759574309755155*^9, 3.7595743787264795`*^9}, 
   3.759574760573987*^9, {3.7595747916374598`*^9, 3.7595748181593184`*^9}, {
   3.7595749041650734`*^9, 3.759574922993918*^9}, 3.7599120985022635`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"Cos", "[", "t", "]"}], "*", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], "^", "3"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], "^", "3"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], ",", 
     RowBox[{"3", "*", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.759660480570789*^9, {3.759660762392326*^9, 3.759660804196644*^9}, 
   3.75988031095735*^9, {3.75989567244631*^9, 3.7598957014055395`*^9}, 
   3.7598964577475986`*^9, 3.759896495009684*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
e+BU
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, {-8.417821898155756, 
     2.1213199097211874`}}, {{-0.7853981633974483, 
    2.356194490192345}, {-8.417821898155756, 2.1213199097211874`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7596604787710047`*^9, 3.7596604849694204`*^9}, {
   3.7596607644471936`*^9, 3.7596608045895567`*^9}, 3.7598803133109026`*^9, {
   3.7598956777477074`*^9, 3.7598957023075914`*^9}, 3.759896495950109*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "*", 
      RowBox[{"Cos", "[", "t", "]"}], "*", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "^", "3"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "^", "3"}]}], ")"}]}]}], ",", 
     RowBox[{"t", "<", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.759896051226722*^9, 3.7598962631661344`*^9}, {
  3.7598962951524754`*^9, 3.7598963299516068`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1213203435596424`"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "2.3561944913352852`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.759896077874859*^9, 3.759896203863604*^9}, {
  3.7598962381555166`*^9, 3.759896263864705*^9}, {3.7598962980536904`*^9, 
  3.759896330816074*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "[", "t_", "]"}], "=", 
  RowBox[{"3", "*", 
   RowBox[{"Cos", "[", "t", "]"}], "*", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], "^", "3"}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "^", "3"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "'"}], "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "'"}], "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], ",", " ", 
     RowBox[{"3", "*", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.759896542215657*^9, 3.759896615018886*^9}, {
  3.7598966502452803`*^9, 3.759896694776895*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   RowBox[{"Cos", "[", "t", "]"}], " ", 
   RowBox[{"Sin", "[", "t", "]"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", "t", "]"}], "3"], "+", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "t", "]"}], "3"]}]]], "Output",
 CellChangeTimes->{{3.7598966076793985`*^9, 3.7598966157954082`*^9}, {
  3.7598966549913645`*^9, 3.7598966965418105`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "t", "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "2"]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "t", "]"}], "3"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "3"]}], ")"}], "2"]]}], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "t", "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "t", "]"}], "3"], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "3"]}]], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "t", "]"}], "3"], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "3"]}]]}]], "Output",
 CellChangeTimes->{{3.7598966076793985`*^9, 3.7598966157954082`*^9}, {
  3.7598966549913645`*^9, 3.7598966965518045`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVl3c81f8Xxy/C5157i7KS2ZQk0XlnRZFCkiRJSyWjUr4SlZIQJUnSFEqR
lO3zLnuE7JWVSjbXuNf8fX5/eTwf13l/3uec1xlvRZfz1sc5aTTaai4a7f9/
vzTdnv3Z2kN+VMlIqV6xFuVlvs29UtVDHmi8y3kjaw3KyWavrQnrITc62aaL
cWui2cdGHeygHvLouQj05IcG2uobFqLs30Piogrtb/EaKEtP8e8V9x4yb5/Z
tj49DZSZa/Zc2aqHPC1XwtT2VUcZ+Y9EfYV7SE9lxd/CYmpouCSxfJa3h1wW
xHjR26eKVGozA/5b6iZzh/55mGaqopje5hG/kW6S01D9T85hVeTHK115raqb
lGv4NCX1UQWZ7Iu5ERTcTQbL9jh/P78a+Tsk6fEEdJOVgfmp+earUdaxrPFb
Pt0kO6rATV55NdK41HIk+EQ3ufZY3+4NbcpI8Im0/l3jbjKrfvuDg7uVUVNf
zGQErZss7pkf9kSrkFzHvgOrxrpIu5iwyFyFVShixLNYuauLlC7te+XEsQpd
EEt/oZrfRa5pXbf0rlAJGRzWclh7pYuM4K7S3WGhhKrHtCp1xztJiZqgu7Zn
FdG4lPZ7q56f5IYT7buXf5NHukbOnt4/fpLFtGfNbY/kUYB76OZHX3+SgSFW
hhzu8ki4uC+/88VPMtRs/J+PrDxa5/Ww+pzLT1KKP2p60FcOuVVNj9791UEK
ti9msnatROkzShmp9R3kUNXipUCVlYitZHW5vrCDrLup2HyYcyUKvpJIk33d
QXrohKYL5K5AiSr2Im9dO8hnf9/KbtiwAvUFZGuV/W4n06b/BOWpyaI1Kb+n
BxvbycjPDe/E6bLIu1kkV6iknRQrVi5J/yeDONe5GR14006u7zxen/9OBim2
y9j+OdFO6nHzFM5qySCnzX4Xl/W3keJXL33wtlyOmv9tz0IDrWStv4D31Hsp
JHpyJky4tZW83Ku/reCBFLLoSz3WXdpKPhUqaPl6RQrhTgWhgIRWsnD/ChEf
Uyn0tp7zBOncSs6/sXEK7pVE/vklYtubW8iS0ZGjRcqSlP6u/RMoaSHPfpYN
ZApIImbmFvJnRgupOhV+wHZGAp1KT3K7er+FrN6kp5xcIYGsE0O+5lm2kImS
HB6R3hJodeSe89uKmkk3xoc3zO/iyFmQ14TvUzOJa560L8sRR7F3SZn2F80k
S67hBHojjgRvbSjxvdZM7pGpa9O+Jo5YvqIrc/SaSV4ugQXeTeKoyrWpQvdj
E9khyXTheCmGvHWdVHTiG8nDpu3W1bGiSDfUcptdWCMprLBNM++uKJrv0t97
ya+RfLVKDsr8RNHN27K+XxwayfHXjnx6R0RRdFPLdx2pRlJ0RHzRb7Uoyrpg
c3FLRAP5LmjjtFmmCPIrMww5cK2BFKtcOjWfLIJ2rNB65uPeQFaq2WyqiBNB
FYXC5ZkWDaTmD63hT9dFULto9QpdegO55fXsSLaVCFpMMyvSvV5PvmtV7zs6
Ioy+LdNttfesJ5vz4l+96BVGt+1VRy4715NT0mZXWE3CSJjGI529vZ5kztDf
DpDCSNGq8MzWuToy8RZdpOO+MDIeNhDTu1BHorfuPFX6wuiO+iaXbSd+kP5e
Xn8CQAgpRa/7ftXuBynySFfn0DohlMepoYtNf5BPytT/2a4UQmPtCoImqj9I
r2bFuIQ5QWQfLpizp7+W5DjAZ/ElWxCpMP+JuLjVkmPPLsud3CaIbl7ZcUPk
ZzUZcDyV8dFGAGVZ6x6Mzq8mM2oi2BKmAmhQc/162fhqMupTn3mUrgCy7lzR
rnykmlx4aODWsVIAKRqxtHR7vpNKWTsNov/xowL+1F6n31XkRt6Nw2FB/Gjm
2QrDlOEKUsPtQkRoNR8SXrlm253KCvLakaGc4W98SCN2m/aJ5AqSgWVPn8zk
Q45RDioKxyvIkvD9H18950PfgmMYUR3lZCYn19ttF/hQqKd4/X+VZeQ0w0Sp
TJ4PJYysqrJPLiMfuZyNeibBhwrObCrefLuMlB99oB3Gx4fGj1tnjhqWkVnF
qRfezjCQnUPEk2M5paRW7n6Df7UMpGDE77o7uYSUtvfWPHSbgbZi2cNqt0vI
gj1Cv4P8GcjaQNOO+3gJ+bFyuqjoIgMFbdllRiqUkMreatf8XRloQDN4zaaY
YtLDMvpZpyEDZYgvm5K5XUSu6/I9r8vFQGZ/5oIGXL+R+dzZig8j6Yj/4SpN
fpNvpBFXiPrVu3RUa7S7du3qb+Qp5tc27yA6sn8RK+P5+yt5mSt+OPQKHZ12
3Jo6c/wrudd+ecUZFzoKqbvUsuwkJr8n3rxQpUNHewLjr6rsxOT1GGmf6I10
JLqhRMlMFZN7SpZxua+hIx1ZzTbJGpLcsFnL20SJjg5EnuJSri0g702d7Hkg
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
5UBVfUvvDaXX4qwguBZNsbF5zTdT+bX4f5qEEDc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, {-14.56108673839902, 
     14.556264302245241`}}, {{-0.7853981633974483, 
    2.356194490192345}, {-14.56108673839902, 14.556264302245241`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7598966076793985`*^9, 3.7598966157954082`*^9}, {
  3.7598966549913645`*^9, 3.7598966966677322`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "x"}], "]"}], "+", "1"}], ")"}], "^", "2"}], " ", "+", 
      " ", "3"}], " ", ")"}], "*", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "-", 
        RowBox[{"Sin", "[", "x", "]"}]}], ")"}], "/", "4"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], "^", "3"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], "^", "3"}]}], ")"}], "^", "2"}]}]}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], ",", " ", 
     RowBox[{"3", "*", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.759882046887045*^9, 3.759882105350239*^9}, 
   3.7598965016516027`*^9, {3.7598972513211727`*^9, 3.759897259950864*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
57QELS8YAqKxW7UfbtbykKD9DxdWcc0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, {-4.85369557946634, 
     4.852088100748414}}, {{-0.7853981633974483, 
    2.356194490192345}, {-4.85369557946634, 4.852088100748414}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.759882108310247*^9, 3.7598965026389933`*^9, 
  3.7598972621505127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "'"}], "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7598980128177958`*^9, 3.7598981204396477`*^9}, {
  3.759898358467641*^9, 3.75989846618686*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.377805561592544`"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.211243837350314`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.759898035950572*^9, 3.7598981213420944`*^9}, {
  3.759898359550975*^9, 3.7598984670003605`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "x_", "]"}], "=", 
   RowBox[{"3", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}], ")"}], "*", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "x"}], "]"}], "+", "1"}], ")"}], "^", "2"}], " ", 
        "+", " ", "3"}], ")"}], "/", "4"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], "^", "3"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], "^", "3"}]}], ")"}], "^", 
      "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "''"}], "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], ",", 
     RowBox[{"3", "*", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.759881231737647*^9, 3.7598813444238386`*^9}, {
  3.7598819417015133`*^9, 3.7598819728689485`*^9}, {3.7598972902672224`*^9, 
  3.759897334926759*^9}, {3.7598977923587227`*^9, 3.759897804794077*^9}, {
  3.7598979021302977`*^9, 3.7598979252636213`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw1W3c8le/7P2ZGmZGQUcg6QkLWdcyUEbLL+CCVCi0hRZKkQioJibLLSCpF
npvI3nuPZG/OMr/n98fvr+f1fq5z39d6X+/Xc/1xxN18rM7T43A4BgYc7v+e
iyxLLZp5Y1h65wGkHXwe/VGM+9iUOYZtXuSLCtE5jyo///IIiBjDqHOrQaJ7
PRBj7C7etJAxbP3HE7XFBndkcN2yvMl/DKtI+dLB/sgd/Vb+d0Di0hiW6V2c
tGfHDVV82d3ddHIMWz2l33956z+EfT17UoJ9DNtKN4xdwLui7VfpZHOGMezX
g86LzUsuSMdvMT1gYxTbnD468+KRCypTfUDfPDuK3e9ps7ry0xmVfs8pCWgY
xXov/JOwUXFCm6/XLqVVjmLy3gyjrV3nkJa/jkBz6Sim371l2xN4DpWot92U
yB3Fjn38aelWfRb9/EHFNz8bxdy7Tt54ec0Rrb/RH6A+HMW0vxsFPBJ1RMcD
n0VK3BvF1Mqvd9Q0OaBiDfHJAO9RbJ+Lk5iwkgP6XmKcInF6FOOvvIKsGe1R
0a/XPIFco1hi9tcWuhEbNP8ns3Z91ygmtXQxOzfBBkm1fA+5szOChevd5wqw
tUHxY90LQQsj2J69PeftWq1R0C6B+uAGmr1mV//r9jPoK5d0KK5yBDv7Ua8+
Le4MWtivfvx+yQgmzH/8ZobjGeQqb58ZmjOCaZ/50n/znxUytIx/8DBiBHt3
qjymjMkK3XPM0mAOGcH8udbpl5stUbF78XL47RFM/mf2n7UESyTr1+MS4TmC
TYQ/9HY9aok4EgW0nhiMYL3jOu7OVy1Q13j8WgxuBPO4cHRXB5M5EhmwtDu0
NIyZjzvIM302QzEL16okhoexp+VSI1eczNBN3sLUw7+GMQtH5qbaH6ZI20nZ
ER8wjE1qxOlIhpigpiXlevXlIcx85laSAJxEBIYzxzVGhrBx+7zz1hvGqJDv
RqZm8xBm5/XYL7DYGL3W+PJAJ3cIq5vEpdw6Zoxcw45qGVwawsIZGJt/HT+B
lvep5J4eHcT0ct+0hFw0ROr6rtdutA5i9Dc8VCyPGaIQ76fHXpcPYifLY5jK
6A0RV9X4r6HUQczSs+2F+zsDpHD9VdNVt0FsfZpX7t2wPvJqIC0++TuAWWm5
iewE6KFC8sGi/PYBjN203CP2tB6iHjzt3/57AEsawwmkSuqhiIBMnFDaAFY/
rFEs066LMqXsuXM8BjCmrswjxUd10XjID+Waf/0YH7/+gjsrAcl/+kea7ezH
jN/mcLfXA7rRzV3C+acf22PWL/7hISB6BS99u4x+7OuCB/ejDR0k3i9oPeHZ
j51z/GXGt6SNnI8F3WKc6sN2Zq7FSa1rou5pnWLCTC92X/6V0WioOuK5QH7G
1duLoT2L51pN1JHpeL77SHUvxgoLkfZ86ggNiXGGpPdiqYMpq4dy1FBOO70n
5tqLOavpa9zuU0X3fv3h1enuwWQOUbsuWx+j8T14es+fHuxE/ZjNpOQxtPpd
DRss6sG+6WfHDZBV0MXCLK+7sT1YaI8avcJbFWSVGVleataD5fe8ctGdP4ok
n5v7aFZ2Y5yGC7HjqcrIlWOXIfuXbuyezJPxk4HKKOEJJtif2o1ZXWxU4jmj
jDjCFf8EBndjYsvSNX+YlBElkOfAT41urOLvAdlkHyXU4NFVp/65CzsRah7F
bK2Ibqg7S6kmd2K8UlZn8Z/lkfpTM03bZ52Y5VYw9fVtebQ5rGXhF9SJ8RQb
lz7QkUdhj4QCvzl2YgVDt2t7GuVQXFdPo+q+Tiyj6UiHxYosKr555pZaTAeG
DqyJnLCUQUE1epF2wR3YGn+VygFRGaQrrPzutncHFv3ChcFlXhrV/eaq/W7a
gRVaPGUTfyKN+nmahNVZO7C9ezfP3qs/jLYLjCvVQ9uxrfZg40xnKVTBqN5r
f60dOxBUalyoLIUe2R9e8HdtxziEbxXu2yWFuHDMAj902rH5bY/J+QJJJH76
9+XjG20Yl0dDRC6LJDKY1+bVuNmGVTPLrBVUH0KPZY66aXq2YguX3tpx3xNH
B+MUGu/atmJCI1pBe5zFUSm9rDoyasXU8LdY9XTE0VK/GIfh4VbsyGM+fasd
MWQfxfHTfKoFmz52tQEXJoakVqe53bxasJsxspdPK4iisADdB9yDTdgdhf2N
AxVCqNhK3SHuVxMmUqD7eH+0EJqVO3JEKLkJ07l0ITTnrBCyGhLul3Bpwoqn
Ao/9IQoicX2KsvpoI1bE6n6mBS+Iynbnjzn/a8DWB5fcXnwSQOR3wnqf5uuw
mpLhM1YjfIjrgLzm4/o6rPUo25xqIR+STdBU8cyuw6yS1PI9w/jQuZeOUmLn
6zCkdZIxXYYPVUTEs70cqMXeO25ej7y9Fz29trf9Tn0N1lH3O8tLjBeJ6e/2
MMn+g1m3PXO6/J4LHUdCTtKP/mA/97MKRARxISttOVum838w4ddOWYO2XOih
2iljTOwP1qZA8FDazYVm5CLkj8ZXYecdT0YOrHCgor2MRMFHlZiHsr7Jl5Ld
yHhi4+GMRwUW7h/55/BrFrT71SG53YYV2M1mwuqBcyyoRd+kBS9ZgRFFNN+7
irMg+9QEwWv/yjEVw2Hr2k+70KVzx/PJ58uxUKXeDYFqZhTZ5tfDeAFh42xp
ytqsTCjh7l8bnbZSrKNHl6SB6NDBfuWU+7GlmOPdN521z+hQjnroTKVVKdbG
bLc37iwdKlkVCzZpL8G2PckC/8g4NHDJOcu+4yf2sVfOzuooDona9q5f7yrG
lKX1Lsp5bWFpCs3vMvuKsNS9lUFpv8mY9QR1Qi6pCLM9GxRwyZuMMSZLKBQ4
FWEspQl3oveTMY89gaXFI1+w0OriK5u+JExiTqK3dqIQCxXePGciQcQ+ZAfy
zK0UYI6rTiTTpBXM8KQp23/8OVh2MiZg+HYWSytOjb/0JhtrVhJrVWadxRil
yVLXhbMxhgLzl1W3ZrBK5vf6Dw5mYd83ig26LaYxg0pyULpCBhbE/oz3Ncck
ZgAfFqeN3mNi1Lc8C7TvkjCvtex/Cy8xhefeh1QSO7BrFz2Gvw+/wCwy7D6u
PmjHnD079ka2xGJeqzmVrN5t2HG3omCFwhgsRM61U8WoBRv4MpWzMBOBXZm4
HFS/uwZDp97vMh7xwVLUQz6syORhWfn7LDLnH4OXtU1/0otqaPqi9o9+91MI
P/H8lqdvLax+twt0lo2C06PvSaWn6kF0xKQt8uhz6FNI9OKjNIHX1JNNXd9X
wGHQml4r2A44KrtlwfRbEGX6+Oq0SB/w72G+a+SdCRIXe6cZUv7CzRPzn+vm
MqHxq42x49ZfaLvfMWF+OQs+XhmrkXcch2ek9xZ2F7PB2lzxpBHPP2AcoR11
+wiOcpEpJkETsFoYUP/YNh8s9bwi3qpNw8VPpKee775AunfPg51TC/D6pFdm
1tAXaBKw5Kp7vQB/JgbLZw4UwasH8kUc4wsgIV5F8k4qgoxD51KY7izC8KsX
rrfffAWtV5eyrCyXwDZYUSXixXdosggdJFxZBgMrr/7sRyWQ3aWoF+m9ClmZ
n/I1G0pgzOXjl76oVWDfWnjQyFUK9ClC5O68VWjLvCG//KYUVFJ7RHrmV8F1
K+iu+qdfkP21c27qwhoEZUWLVrdgsOKd5bfflAhL21MBn9gQ0P99pyV8gQjv
Zdg8iPIIxNvPCdbcJwJTsKn6o2sIFAJ0uAS/EaFBpnUkZx0Bc8G7s+8ESeAY
3Ke0srsCGl4xOi21kWB3zoaQ5pEKeHn85jn3KRKUdQgzh1lWwFhU4FDgFgnE
ZV36+OIqoI6HUzpOigxTHX9Dj4v+BvXfvh03b5IhYYfxaqjub3Ad8lymf0QG
U1kpu3r33xCWFUVWfkOG/OCLck5Zv0G4Jcn9dikZ/GTn20OUKuFT1gx7xDYZ
pG04ymrPVEJK09FaIQ4K9AUfyeLxq4SB2q8fzA9QQLvzWlDaz0oIryvVjNGg
wMJOrOf8QCXYhu7STjamQIpskYXqTiU0HBX4e9KWAowhJIka/Sqw2GpI8vel
wLecfZzcnlVQLKGysB5EgYud6lSHiCpAGtMu+x9ToEH2TuNsQxWM3U/dJ5NC
gRedO7c4bf/A8zKF7ohaCiie+TL6/fYfyOWKPPetjQJNLZ5mrm/+wLuGqRch
/RRga2iU+DzwB3j6fz+ZnqVA1sn7MQ7bf8DtgUzYo1UKGFWrbNKJVUPxsQvJ
aJ0CoRWJ7Vbu1TBTLptKz0IFMcJp2AirBiudwFI2DiqU/aL/+CGjGqgCai6f
eKlwTvMbv2lNNQhfUhGfFKDCevGl0LXpasAFZbz5eYAK8aoHFpLYa+D91CEX
qYNUUC1qcTDE10BiZsYuWSkqdCiFVc2b14CVwjPpKhkqXM9XU4rzrQH6qERb
sjwVuPCzSTqxNVAatymJjlAhLyeZZfJLDcxs6cmKKlPBVNrqZnRnDeg+9iLx
qlBhJp1pRI1cA2zavcLJx6gQceiHyYhALQxHuR75pUoFqdQr3yM0asE1SQfz
VaNCpYjYIaVztbB2XtSpmIbdktqjeu/WQsIekTcvaBgn+Gj9/rtaMBb8Q09P
w8mvNTxly2tBEdsrw0C7T4tvobVtrBb8DwcmxNH898Wmat9hrIOnf/rGS2jx
+XPZZB+SqoNrn2JeXVekAn8UC1/DiTpYG7py/CeeCkXspSE3L9UB/ffic7Gy
VLB87DMn/KQOGPXVnqzT6rPAfMi+6lMd+ORKWazQ6vc0rOv31aY6OJmlqxog
QgVZ+sgj/Et14DWIqqP2U6EmWDuxjLseVN3PRSnvpYLn1hLzhaP1kKVqxutB
6x/jnbTrnDb10PTDfPggrb8EP/ZTrvH1cPkK81UjWv+HVsu+svysh1DeRu2c
FQoEXbsu/rm/HgiBNTfezFCg+EovhU60AfRk3KUFeilgO/PUI4fQAGG2HoUZ
zRRYu0BosXKj2e3+Ky6rovHTPTPzQ3oD8AvBqccFNH6OOPKaVjdAQ9uuIY10
Clxx5ghem2qAl6Xvtm68ofHT4ZatoXwj5LE+nA0MofGzW7pi3qwRPlbfLjtx
gwLj1gP4OJ9GUOWMkEo4TwExC32mycJG6NPkLWmkzVtZI8k3uqMRFpnkpnOP
U+CcSc6AGqkRBNbe5nPLUiDeiLso4ngT/EyaZnRjpQCn9rCbLGqCJtaiH/sq
yED/OPBg1HATJJcvRp8pIAOpg29sebsJ6h5MfhNNJsPAFdP/fmg3Q2ChyukL
/mTISvrhYlzSDF7TZOasw2RInLIW/dTXDJucNhWOPGSIUlka4lxvBlMsJSBh
kwQanrz5l4VbwF/miALWTAKx7ZMKR8+2wJpmyb/nviQQTNvH8c+rBQT32RWn
2JGA99S/+bjAFvAbunz4uA4JmONCctfftABJo1uaiY0Ec/jv8hU9LWA+xN6x
lUiEH04Scpa2rbB9S/wCT/YaFDKssDF4toJ38wPio4g1+JSNzRTdaoWDfI9P
h9D0O4XomCPwqhVMr2p+Jh9ag/Bnz2VG2lshXLhfjRi3Cla/tg/7WLbBXNij
sXqPFTB1b9gl/l8b3JR9y6SptQKGrAmTbb5tgEukl5LiXQF1m2OZqjFtkOTc
meeNLYPI/GWp7Saa3fiz4C/uZZgR7pV4ZtoO9soHM/8eX4RlX8HVWKd2OMfQ
aP2weQEolWfL473bgavBMX/EfQGYrg45pcW0Q8vFTX0UMQ9iv/7GlXS0A8tr
xz3Mv2fBxmmBZeZcB3z6wBxXQ5mEc5+PdC9e7QDEuBYbGTAJbkzX0on3OmDA
aVSQRJkA39xVXbrUDvBt+L1QtfoPIrcogQL/aL930FnE9/4F9JZh3uhqJwik
bWJvK4egetmgxPReJ7im/uy/ljAITYbhj62iO6GGkS71ztUB6J9nkXL+3AlL
PjzmMux9QNLmcLlF7ISWFop0mUQnyA0JtH642wUpeUFYTXIVxIkofMVFdYPY
lzfiupw1WLWDO378LQ0b2QVOTtZhlJfx6dW53YDLVJL+UdWInWVniItq7IYQ
c2rc9ZpWTIzS7Se8pwdSVKwF/hR2Yzmt99XVn9LwRdV5a/oxrCyss8QnshcE
2raLoiwWsUWMTeVMQi8oqnlq2AgsYWIb8Ek1pxdGBmJO7368hD24lpO0VdsL
HXMEcb8ry5ixc/DdJ6x9YJz7Wk5dcxVrU5OBzIg+QJ7MuVcpJOzfTFDFUHg/
7BYLObW4tI1JdEjK8Mf3wxwSjTx8fwdz+9UUbZbdDwMLxszcrDg0FC3mVFrf
D9IWLKCQiEM9KpXkN1wDcNN86cLCbzrUcI8db5MwAOqn6itsDzOiQp6E1/W5
g+Cq4fdy6Sgruqfx/UpxxzBcdBl+EXmYBymbybx8928YwlM/5iTb8KBJl8SS
cNIwOPIxMXQ+4EFZFfBQdvcIxIlKK2SO8CDuqUMdFPwIrHkuyPYk8qK/ynPX
Xl0bgaLs4+KiAnzoUU1QbhNlBPA7h4oSJQVQ8+pbCd1dYxCWUH8+844IKluy
eHaIcwxO+y20v/8ogvLmGUhM+8agiO4I6X2/CIqavFRdJzUGRm2dt/I1RZFp
/zEva6MxMCnZ4p3bEEU1FY35Fx6OAQX9TtYvE0Po+ZZGFMNfSLZivemqfRAV
HHGy7N/5C3sZq59+l5JEGQynPl9gGQfdJG0OWZBESd2q3Gtc4xDZWnj8iZ0k
igjmat19cBzu3PjJLxAhif5r/m2hYzAOEnRtyZZTkojHR9YiNWIc8v5aBi6n
SaEbeWTzC9z/QM9R96bVbmnkFTqet7r/H7gmlkmPi0sjV9tWjpCD/+BNoHOn
vZo0Mt3OaYo/+g8mPkRnT/8njSTMnc3rbP7BPa4ss3dfpVHHfKUZPuEfFPXd
X2O3k0Gq+FjT1YMTkDfJnRARLIsq1vzvL8hOQHZMok5OtCwyK3X5Nq08AQ5K
murZ72SRhwlebERvAjLYVeR0MFn0/FLNaoPbBBya65X7tSmL5tK3EzLeT0Ci
YjWl11cO+V/915yaMwHpjl/mv9yTQwzHGhjfFk7AXhcvnwtP5ZBg5RvvFxUT
MJKZpu6YKYdOjKnohYxNwLnhooGL/XLovcjlaYeDk6D6y1hgU1MeKUxYitjI
ToLU584CmxPy6Eeu+hkL5UnI8fj86qGVPGrRYv5lpDcJf+oUHl+4KI+2HFNj
jrpNgue7OeEjsfIo4mBElYLXJJjpEvarJsmjvTPe6zLXJ+FZyJlN7gx5JBug
5SEWOgn+qb4tJ37II/vX3Wp73k9CQXvkqcxBeTTuXHaFJWcSiM4aPJYT8shH
Kj2VoXAS+o1HHzYtyKPwr9fZ18sn4f7A7Ij+jjz60r5neGJ0EhJxXUl7RfBI
J3GNd2x6EiYPq5PsJPGozq3feHB5EnqUVuavyuPRyHJWYTvdFNy6EgTcGnjE
wWUQjsSnoMV9j5HyGTyyvhKd+EJmCvQ7ax/N2ONRYk1fgafSFByr/c/WzxmP
pO9f69+tOwV7CF06LJfwyHuwdGnYeAp8PNvkObzx6OtxFuYvFlNQmTZzevI6
HumtJCs6uE7B1PTTfzxBeBRhPmMof3EKKqJWlM6H4FFzzrGzOz5ToPFR/kJk
GB6dc294mB48BfIXGk+YPcWj99i+RP9HUyDaM9g2E41HU0LuBSbRU3Dz7D7m
sy/w6FYHtW85eQri6C7If3mDR6WKhkuVGbT70hmZEpPwiP5ZDFN83hTISvdb
2LzDI+PpfsHL36aA3BXOOJaKR1GGhxV1yqbgZMZ/fLppeNSRet2Q+88UfAp7
EHA9A4+Etn85jjdOQV1GxWG/LDxyc2T1/d45BYuNX/aZ5uBR1jfrh5GDU9AU
kaO79hGPFnhSEpz+TcFD7x/J3rl4dMxnNl9xfgo4rAulS/LwKKhetYqBOAWl
d6T6evPxqOJwaF/X5hTwY555dQV4xBLWuJjNOA1cXx6kPvuMR6dHBJju7p4G
wT9mBQcL8ShOy0PQYu80TNnb9Dym4YH4/COHhKdBvHVm328aPkhcNyAdmgbb
DBHvJhq+ZGnkWCs3DbqXyvs+0nBB7nOfpKPToFXl7nyWhkmsg2E+mtNQccd2
fYDmT8tTOkFPfxpCHXMKFGk4tOJGPp/JNBjJKYbZ0uKrEcEqp6ymwSbZ39+c
Fj/nHba+EsdpICl0PBeg5WfbbbMY5TYN2vRnOos+4VHS0VRGN69p2MQqjQ/R
6jMWPbf/2PVpoPcsXnHPpvFpTu0IS+A0fOUL6vPLpPHJ+IFB//1pKOwXZjmX
TuNTWpND3uNpWLvmGcb7gcYnp/Nh1m+mYf5XXzT1LY1PPwreHE6dhriGMyrS
iTQ+8W3mrWfR8A9uK5l4Gp+aYntTiqeBDxOS//CcxifZoYUbaBrURd8xCEfh
0XS4DOOJmmk4KNwZeSESj/wAKcx3T8Nfht4Jv1AanxLZDdAwLd99Pwc07uER
A8XW4cXkNNgJ3ahsDcCjmIL5B8fJ0/DwQ/QXf188yhYX6n3IPwNfA0sg9yyt
vtYp/+hFZ4DDoSskygaP9CMkV4IPz8B5QcVQzdN4NLhwhD1QfQbojMi6VF08
4i410PZ2nAFWkUtWu2jz67xYe3LWbQbe8yvJnTqARx8Pnra9eHkGfIXmOx34
8MjwsYOPW9AMXBo5rDXCiEcBtt6ptskzwHafXPJsVB79ebya254xA+80uaM0
e+QR7y//nxb5M2ATNhH8vUke5R560H4KzYCD11igYIk8Gl16zQRjMxA5assS
+1wenXxSfumw1CyY6u1I3jwmj+LKjPzSFGahJP64lZCMPPq7XB8qrjYLpeIb
oy+E5dFd+65EIeNZqDfP279OL48+S842cnrNQpP17pepjXJoP9qrTMmdhWud
r269dJRDnqtvdG59mwWybaOOj4kc+iIlarJSNgtOyh63RbXkkNkzGY+5Zpo/
zT5LugNy6L6jTtzI8ixU9l971jYgi6bXLqzXHJsD2fhmyTlrWdQgNNlfpD0H
qsFGJT4GsihPz/NXiuEc8PW7WrYdlUXXYzxC/G3mwOkH24NjPLJoU+4/Zulb
c+DCGiZzp1EGcbg78jwqmgOJllYOHR0ZpNxqKmt4dB7szYUuhLNJozu5So7l
igsQROSKIjlJIo+PM8p2xxegsbt9856hJDLN/sA+r7sA+6tDuojykkgkne+X
wJkF4MzaMCrYkEAVSVRR31sL0Bc4cNctXgKxPC3/J/JzAcyGVSc5mg+hOC/L
a0H6i1B4KPM5r8pB1PtCvVJIbgmCPU/dej5yAMk6VadYHVmCtGvlhP9yD6Ag
Kdu7j48ugckTT7XjgQeQ2I8bqmTNJTiqstTHsPcAujiUl9VmugR71L+o8RoL
I4q05LPH3ks0fb+x53mhINpXxm1L/rwEEzcrMp+83IdspmYm29SXQUg7dlox
nRtd/0hSKNdahns15adaArlRlDe9Xz5hGRY/m72OsuBGNWv7GZ8aL0P1AbbJ
i5tcSIPupJih/TJtT6eOJ9hwIRHBTPvvt5ehmP1Uh4kwB5oyca9N/LYMLNET
z/2VWREjpw9X5M9lUI9cGdSdYEHibYF2/mXLkJJPOmeTwIIc7WP/Wf9Zhpir
SsLnGFhQg0c5HUfXMoQpBHkt9TCjz3dFNUKIy3BqRInLO5YRBeb353iorECN
+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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1065., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, {-171.97628789736805`, 
     1.5761035573581212`}}, {{-0.7853981633974483, 
    2.356194490192345}, {-171.97628789736805`, 1.5761035573581212`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.759897943944149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Integrate[Sin[t]^2/(1 + Sin[t])/(2 - Sin[t])^2, {t,0,Pi}]", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    PodStates -> {"IndefiniteIntegral__Step-by-step solution"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "IndefiniteIntegral", "Indefinite integrals", 1, 2, "Content"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "primary" -> "true", "scanner" -> "Integral", 
     "title" -> "Definite integral"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[Sin[t]^2/((2 - Sin[t])^2 (1 + Sin[t])), {t, 0, Pi}]"}], 
       XMLElement["moutput", {}, {"2/3"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
                 RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", "t", ")"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], "2"]}]], 
                   RowBox[{"\[DifferentialD]", "t"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["2", "3"], Identity], "\[TildeTilde]", 
              TagBox["0.6666666666666666667`5.", Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "VisualRepresentationOfTheIntegral", 
     "numsubpods" -> "1", "position" -> "200", "scanner" -> "Integral", 
     "title" -> "Visual representation of the integral"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[Sin[t]^2/((2 - Sin[t])^2 (1 + Sin[t])), {t, 0, Pi}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GraphicsComplexBox[CompressedData["
1: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
g+0=
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.1], 
                    RGBColor[0, 0, 1]], 
                   GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1XWU1GUUBuBZuhGlQZRWkZDuUroXFKRdUmLpVhoEVEBpsAgDDMJOUrDA
QMUABRQwSZVQ4rnyx3Pe997h7Jn5ft8MRVOGJKemSSQSSaxIupp3J13tFfWl
sgZz+MX8qCzDfTxtXiwrMZ3vzHPl9aQy1FxNzuKwXlKOZoleXk7mEz2n7Ekz
/Qg36eN4Uv+SfHr/+Df6DxTVh/OA/g6XaWu+Ta7hWwqbBzMk3iMfk8Pcg6b6
E+wlr7lf7PWZvM0l2thVkKks4iOy23Wnid6dGbzFRVrbl5eDWciHZLPrRmO9
G9N5k/9oZV9ODmIBH5DVriuN9K5M4w3+paV9WXkHXZjK61yghddulbfTmSm8
xnmax/OSt3BznC2lKRXPgxIUp1icKzdyA0VoGHeBybzKOZrF85UN6MQkXuEs
Tb1WWA6Me8Iusth1ob7ekYm8zD80sS8kV/MNhcyDGKA/wk4ymztTT3+cL8hj
7std+oF4z/ow7tc38TeNzQXlsfjs+gRW6RXlNPbpBeVA7tWrxn3ikD5flmAU
8+N5xrNiEu+bH5KZWM4y6totkdWZzc/x/mVpxvJY3KG4n0zlc/PDMjd9uNNc
Rc5kf5x/fHfiO6aXlRPZqP9FI72APBrPUx/PSv1rCsTZxXdFPxjPVR/JPH0H
GfVO1NFX8BnXmXvTQZ/ABs7EPbPLL/sxl+1ksOtIbX05n3KtuRft9fGs53Tc
Rbt8sm98VraRPp4ZtfRkxvESp+Ku2eeVfeJ82Uq6OBtq6u0Yy4ucjPtnn0fm
js8Q74NcXENOcpCdbGSNexh3iUzUoC1jeIET1Pf3MsrqtGE0z3Ocel7LIKvR
mlGs40/qei297M2DbCFtnCdV9VaMZC1/UMc+nezFHDaTJs6PKnpLRvAcv1Pb
Pq1MYTbvkWSXTGV9GXvis5tTaKEP51l+o5Zd/L4/xVfkj/vOPfqPFNNHMEt/
N5H4/z+AdlRSf6KUPoalegU5hd1xzvE3aK5XljP4Xp8ni8TvbnwnzQvitym+
mzwTZyR/lTXlFZAjsag=
                    "]]}]}, {}, {}}}], {}, {}}, {{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1: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
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$3205006#1"]& ]}}, {}, {}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              AxesOrigin -> {Automatic, 0}, PlotRange -> All, ImageSize -> 
              200, DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.}, 
              FrameTicks -> {{Automatic, {{0., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.02, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.04, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.06, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.08, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.12, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.14, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.16, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.18, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.22, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.24, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.26, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.28, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.32, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.34, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.36, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.38, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.42, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.44, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.46, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.48, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.8, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.6, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.8, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.6, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.8, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.2, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.4, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.6, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.8, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True,
               ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[
                 
                 NCache[{{Pi, 0}, {Pi, 0}}, {{3.141592653589793, 0}, {
                   3.141592653589793, 0}}]]}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 440., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                PointSize[Medium], "PointSizeFunction" -> "SmallPointSize", 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
              PlotRange -> {{-0.3141592653589793, 3.4557519189487724`}, {0., 
               0.4999999263361028}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{Automatic, Automatic}, {
                Automatic, Automatic}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[Sin[t]^2/((2 - Sin[t])^2 (1 + Sin[t])), t]"}], 
       XMLElement[
       "moutput", {}, {
        "(2 Sin[t/2])/(9 (Cos[t/2] + Sin[t/2])) + (4 Cos[t])/(9 (-2 + \
Sin[t]))"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", "t", ")"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], "2"]}]], 
                    HoldForm], 
                   RowBox[{"\[DifferentialD]", "t"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RowBox[{"cos", "(", "t", ")"}]}], 
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", "t", ")"}], "-", "2"}], ")"}]}]], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"sin", "(", 
                    FractionBox["t", "2"], ")"}]}], 
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    FractionBox["t", "2"], ")"}], "+", 
                    RowBox[{"cos", "(", 
                    FractionBox["t", "2"], ")"}]}], ")"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", "t", ")"}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", "t", ")"}], "+", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "t"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", "t", ")"}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"sin", "(", "t", ")"}]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", "t", ")"}], "+", "1"}], ")"}]}]], 
                    "\",\"", "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"tan", "(", 
                    FractionBox["t", "2"], ")"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"\[DifferentialD]", "t"}], " ", 
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", 
                    FractionBox["t", "2"], ")"}]}]}], "\".\"", "\" \""}, 
                    "RowDefault"], "\"Then \"", "\"transform \"", "\"the \"", 
                    "\"integrand \"", "\"using \"", "\"the \"", 
                    "\"substitutions \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"sin", "(", "t", ")"}], "\[LongEqual]", 
                    FractionBox[
                    RowBox[{"2", " ", "u"}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]]}], "\",\"", 
                    "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"cos", "(", "t", ")"}], "\[LongEqual]", 
                    FractionBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["u", "2"]}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "t"}], "\[LongEqual]", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"\[DifferentialD]", "u"}]}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"8", " ", 
                    SuperscriptBox["u", "2"]}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}], ")"}], "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    FractionBox[
                    RowBox[{"2", " ", "u"}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", "u"}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]], "+", "1"}], 
                    ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Simplify \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"8", " ", 
                    SuperscriptBox["u", "2"]}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}], ")"}], "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    FractionBox[
                    RowBox[{"2", " ", "u"}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", "u"}], 
                    RowBox[{
                    SuperscriptBox["u", "2"], "+", "1"}]], "+", "1"}], 
                    ")"}]}]], "\" \""}, "RowDefault"], "\"to \"", "\"get \"", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "2"]}], 
                    RowBox[{
                    SuperscriptBox["u", "6"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "+", "1"}]], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "2"]}], 
                    RowBox[{
                    SuperscriptBox["u", "6"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"2", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], 
                    RowBox[{
                    SuperscriptBox["u", "6"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], 
                    RowBox[{
                    SuperscriptBox["u", "6"], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "+", "1"}]], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    SuperscriptBox["u", "3"]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\[LongEqual]", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["u", "2"]}]}], "\"\[ThinSpace]\""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["2", "3"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SuperscriptBox["s", "2"], "+", 
                    RowBox[{"2", " ", "s"}], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{
                    SuperscriptBox["s", "2"], "+", 
                    RowBox[{"2", " ", "s"}], "+", "1"}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"complete \"", "\"the \"", 
                    "\"square:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["2", "3"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"s", "+", "1"}], ")"}], "2"]], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"s", "+", "1"}], ")"}], "2"]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"p", "\[LongEqual]", 
                    RowBox[{"s", "+", "1"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "p"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["2", "3"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox["p", "2"]], 
                    RowBox[{"\[DifferentialD]", "p"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    SuperscriptBox["p", "2"]], "\" \""}, "RowDefault"], 
                    "\"is \"", 
                    TemplateBox[{
                    RowBox[{"-", 
                    FractionBox["1", "p"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["2", 
                    RowBox[{"3", " ", "p"}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"p", "\[LongEqual]", 
                    RowBox[{"s", "+", "1"}]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["2", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "+", "1"}], ")"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    SuperscriptBox["u", "3"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["2", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "3"], "+", "1"}], ")"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"tan", "(", 
                    FractionBox["t", "2"], ")"}]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["2", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["tan", "3"], "(", 
                    FractionBox["t", "2"], ")"}], "+", "1"}], ")"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Which \"", "\"is \"", "\"equivalent \"", "\"for \"", 
                    "\"restricted \"", 
                    TemplateBox[{"t", "\" \""}, "RowDefault"], "\"values \"", 
                    "\"to:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RowBox[{"cos", "(", "t", ")"}]}], 
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", "t", ")"}], "-", "2"}], ")"}]}]], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"sin", "(", 
                    FractionBox["t", "2"], ")"}]}], 
                    RowBox[{"9", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    FractionBox["t", "2"], ")"}], "+", 
                    RowBox[{"cos", "(", 
                    FractionBox["t", "2"], ")"}]}], ")"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "sec(x) is the secant function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Sec.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Sec", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Secant.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"sec", "(", "x", ")"}], "\" \"", 
                  "\"is the secant function\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod4$$, 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "", "timedout" -> "Integral", "timedoutpods" -> "", "timing" -> "4.423", 
     "parsetiming" -> "0.897", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa56921gih109h50dhai1700002ef8h7753gc6d72i8130123784979259853", "id" -> 
     "MSPa56931gih109h50dhai1700003e71496bg7bd11cb", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "48", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa56941gih109h50dhai1700004ed1178ib2hab60g8130123784979259853", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "1.6560000000000001", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "55", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2019, 2, 23, 21, 24, 22.8394509`9.111260587661269}, "Line" -> 
    110, "SessionID" -> 32477397233312187444}, Typeset`showpods$$ = {1, 2, 3},
    Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {
   "IndefiniteIntegral", "Indefinite integrals", 1, 2, "Content"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "Integrate[Sin[t]^2/(1 + Sin[t])/(2 - Sin[t])^2, {t,0,Pi}]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {2360., 19.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa56921gih109h50dhai1700002ef8h7753gc6d72i8130123784979259853", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     RowBox[{
      TagBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "t", ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"sin", "(", "t", ")"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"sin", "(", "t", ")"}]}], ")"}], "2"]}]], 
         RowBox[{"\[DifferentialD]", "t"}]}]}],
       HoldForm], "\[LongEqual]", 
      FractionBox["2", "3"], "\[TildeTilde]", "0.6666666666666666667`5."}],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}},
    RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Integrate[Sin[t]^2/(1 + Sin[t])/(2 - Sin[t])^2, {t,0,Pi}]", {{"Input", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{{3.7599165100529785`*^9, 3.759916534705817*^9}, 
   3.759916725787334*^9, 3.7599167672618284`*^9, 3.759916801715642*^9, 
   3.7599170697631917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.6666666666666666667`5.", "*", 
  RowBox[{"9", "/", "4"}]}]], "Input",
 CellChangeTimes->{{3.759916808948194*^9, 3.7599168374466715`*^9}, 
   3.759916871984432*^9, 3.759917121044265*^9}],

Cell[BoxData["1.500000000000000000075`5."], "Output",
 CellChangeTimes->{3.759916838922764*^9, 3.759916873404559*^9, 
  3.7599171221425986`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "[", "x", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7599169078293877`*^9, 3.7599169297629004`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.759916935624295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"9", "*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "*", "x"}], "]"}], "^", "2"}], "/", "4"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], "^", "3"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], "^", "3"}]}], ")"}], "^", "2"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.759916951319644*^9, 3.7599170510107226`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.7599170117235003`*^9, 3.7599170524798203`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (2016\:5e744\:670817\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1120, 30, 86, "Input"],
Cell[1703, 54, 37636, 631, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39376, 690, 8349, 236, 656, "Input"],
Cell[47728, 928, 60254, 1006, 399, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108019, 1939, 3056, 68, 162, "Input"],
Cell[111078, 2009, 20308, 365, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131423, 2379, 860, 25, 48, "Input"],
Cell[132286, 2406, 9263, 164, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141586, 2575, 678, 20, 48, "Input"],
Cell[142267, 2597, 372, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142676, 2611, 868, 27, 106, "Input"],
Cell[143547, 2640, 403, 11, 58, "Output"],
Cell[143953, 2653, 1394, 44, 60, "Output"],
Cell[145350, 2699, 17919, 306, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163306, 3010, 1138, 36, 48, "Input"],
Cell[164447, 3048, 17694, 303, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182178, 3356, 305, 8, 48, "Input"],
Cell[182486, 3366, 300, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182823, 3378, 1446, 44, 86, "Input"],
Cell[184272, 3424, 17288, 297, 674, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201597, 3726, 95764, 1875, 2411, "WolframAlphaShortInput"],
Cell[297364, 5603, 2095, 56, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299496, 5664, 211, 4, 31, "Input"],
Cell[299710, 5670, 144, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299891, 5677, 295, 8, 48, "Input"],
Cell[300189, 5687, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300296, 5693, 622, 20, 48, "Input"],
Cell[300921, 5715, 98, 1, 31, "Output"]
}, Open  ]]
}
]
*)

